---
import PageLayout from "../layouts/page-layout.astro";
import TableHead from "../components/table-head.astro";
---

<PageLayout title="Works">
	<TableHead title="Werke" />

	<script>
		import { TabulatorFull as Tabulator } from "tabulator-tables";
		import "tabulator-tables/dist/css/tabulator_semanticui.min.css";
		import data from "@/content/data/works.json";
		import {
			jsonpathLookup,
			jsonpathDistinctLookup,
			jsonpathsDistinctLookup,
		} from "../lib/tabulator-utils.js";
		import { withBasePath } from "../lib/withBasePath";

		const tabledata = Object.values(data).map((work) => {
			return {
				...work,
				origDate: [
					...new Set(
						work.ms_transmission.flatMap((ms) =>
							ms.orig_date.flatMap((d) => d.date.map((dt) => dt.value)),
						),
					),
				].join(" | "),
				origPlaces: [
					...new Set(
						work.ms_transmission.flatMap((ms) =>
							ms.orig_place.flatMap((p) => p.place.map((pl) => pl.value)),
						),
					),
				],
			};
		});

		var table = new Tabulator("#tabulator-table", {
			headerFilterLiveFilterDelay: 600,
			height: 900,
			data: tabledata,
			layout: "fitColumns",
			responsiveLayout: "collapse",
			initialSort: [{ column: "title", dir: "asc" }],
			columns: [
				{
					title: "Titel",
					field: "title",
					headerFilter: "input",
					formatter: "textarea",
					minWidth: 150,
					widthGrow: 3,
					responsive: 0,
				},
				{
					title: "Autor",
					field: "author",
					minWidth: 100,
					mutator: jsonpathLookup,
					mutatorParams: {
						path: "$[*].name",
						separator: "; ",
					},
					headerFilter: "input",
					widthGrow: 2,
					responsive: 1,
				},

				{
					title: "Genre",
					field: "genre",
					minWidth: 150,
					mutator: jsonpathLookup,
					mutatorParams: { path: "$..value", reverse: true },
					headerFilter: "list",
					headerFilterParams: { valuesLookup: true, clearable: true },
					widthGrow: 1,
					responsive: 2,
				},
				{
					title: "Überlieferung: HSS",
					field: "ms_transmission",
					minWidth: 150,
					mutator: jsonpathDistinctLookup,
					mutatorParams: {
						path: "$..manuscript..value",
						separator: "\n ",
					},
					headerFilter: "input",
					formatter: "textarea",
					widthGrow: 1,
					responsive: 2,
				},
				{
					title: "Ort der Überlieferung",
					field: "origPlaces",
					minWidth: 150,
					mutator: jsonpathDistinctLookup,
					mutatorParams: { path: "$[*]", separator: ", " },
					headerFilter: "input",
					responsive: 2,
				},
				{
					title: "Datum der Überlieferung",
					field: "origDate",
					minWidth: 150,
					headerFilter: "input",
					formatter: "textarea",
					responsive: 2,
				},

				{
					title: "Quelle",
					field: "source_text",
					minWidth: 150,
					mutator: jsonpathsDistinctLookup,
					mutatorParams: {
						paths: ["$[*].author", "$[*].title"],
						separator: ": ",
					},
					headerFilter: "list",
					headerFilterParams: { valuesLookup: true, clearable: true, sortValuesList: "asc" },
					formatter: "textarea",
					responsive: 2,
				},
			],
		});

		//trigger download of data.csv file
		document.getElementById("download-csv")!.addEventListener("click", function () {
			table.download("csv", "data.csv");
		});

		//trigger download of data.json file
		document.getElementById("download-json")!.addEventListener("click", function () {
			table.download("json", "data.json");
		});

		//trigger download of data.html file
		document.getElementById("download-html")!.addEventListener("click", function () {
			table.download("html", "data.html", { style: true });
		});

		// event listeners set:
		// href to the work detail view page
		table.on("rowClick", function (e, row) {
			var data = row.getData();
			var url = withBasePath(`/works/${data["hit_id"]}`);
			window.open(url, "_self");
		});

		table.on("dataLoaded", function (data) {
			var el = document.getElementById("counter1");
			if (el) {
				el.innerHTML = `${data.length}`;
			}
			var el = document.getElementById("counter2");
			if (el) {
				el.innerHTML = `${data.length}`;
			}
		});

		table.on("dataFiltered", function (filters, data) {
			var el = document.getElementById("counter1");
			if (el) {
				el.innerHTML = `${data.length}`;
			}
		});
	</script>
</PageLayout>
