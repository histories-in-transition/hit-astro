---
import PageLayout from "../layouts/page-layout.astro";

import TableHead from "../components/table-head.astro";
---

<PageLayout title="Hands">
	<TableHead
		title="HÃ¤nde"
		definition="Das schriftliche Ergebnis der Arbeit eines einzelnen Schreibers (identifiziert oder nicht) innerhalb einer Handschrift."
	/>

	<script>
		import { TabulatorFull as Tabulator } from "tabulator-tables";
		// import "tabulator-tables/dist/css/tabulator_bootstrap5.min.css";
		// import "tabulator-tables/dist/css/tabulator_simple.min.css";
		import "tabulator-tables/dist/css/tabulator_semanticui.min.css";
		// import "tabulator-tables/dist/css/tabulator_bulma.min.css";
		// import "tabulator-tables/dist/css/tabulator_materialize.min.css";
		import data from "../content/data/hands.json";
		import {
			jsonpathLookup,
			jsonpathsDateRanges,
			jsonpathDistinctLookup,
			dateRangeFilter,
		} from "../lib/tabulator-utils.js";
		import { withBasePath } from "../lib/withBasePath";

		var tabledata = [...Object.values(data)];

		var table = new Tabulator("#tabulator-table", {
			headerFilterLiveFilterDelay: 600,
			height: 900,
			data: tabledata,
			layout: "fitColumns",
			responsiveLayout: "collapse",
			rowHeader: {
				formatter: "responsiveCollapse",
				width: 30,
				minWidth: 30,
				hozAlign: "center",
				resizable: false,
				headerSort: false,
			},
			columns: [
				{
					title: "Handschrift",
					resizable: true,
					field: "manuscript",
					minWidth: 200,
					mutator: jsonpathLookup,
					mutatorParams: {
						path: "$[*].value",
						separator: "; ",
					},
					headerFilter: "input",
				},
				{
					title: "#",
					field: "view_label",
					width: 100,
					mutator: (view_label) => {
						const parts = view_label.split("_");
						return parts[parts.length - 1];
					},
					headerFilter: "input",
					formatter: "textarea",
				},
				{
					title: "Text",
					field: "texts",
					minWidth: 200,
					mutator: jsonpathLookup,
					mutatorParams: {
						path: "$[*].value",
					},
					headerFilter: "input",
					formatter: "textarea",
				},
				{
					title: "Rolle",
					field: "role",
					minWidth: 200,
					mutator: jsonpathDistinctLookup,
					mutatorParams: {
						path: "$[*].value[*].value",
						separator: "\n",
					},
					headerFilter: "list",
					headerFilterParams: { valuesLookup: true, clearable: true, sortValuesList: "asc" },
					formatter: "textarea",
				},
				{
					title: "Datiert",
					field: "hands_dated",
					minWidth: 100,
					mutator: jsonpathsDateRanges,
					mutatorParams: {
						paths: ["$[*].dated[*]"],
						separator: ", ",
					},
					headerFilter: "input",
					headerFilterFunc: dateRangeFilter,
					headerFilterFuncParams: {
						paths: [
							"$[*].hands_dated[*].dated[*].not_before",
							"$[*].hands_dated[*].dated[*].not_after",
						],
					},
				},
				{
					title: "Lokalisiert",
					field: "hands_placed",
					minWidth: 200,
					mutator: jsonpathLookup,
					mutatorParams: {
						path: "$[*].place[*].name",
						separator: "; ",
					},
					headerFilter: "input",
				},
				{
					title: "Schreiber",
					field: "scribe",
					minWidth: 200,
					mutator: jsonpathLookup,
					mutatorParams: {
						path: "$[*].name",
					},
					headerFilter: "input",
					formatter: "textarea",
				},

				{
					title: "Gruppe",
					field: "gruppe",
					sorter: "boolean",
					formatter: "tickCross",
					width: 100,
					headerFilter: "tickCross",
					headerFilterParams: { tristate: true },
					headerFilterEmptyCheck: function (value) {
						return value === null;
					},
				},
			],
		});

		//trigger download of data.csv file
		document.getElementById("download-csv")!.addEventListener("click", function () {
			table.download("csv", "data.csv");
		});

		//trigger download of data.json file
		document.getElementById("download-json")!.addEventListener("click", function () {
			table.download("json", "data.json");
		});

		//trigger download of data.html file
		document.getElementById("download-html")!.addEventListener("click", function () {
			table.download("html", "data.html", { style: true });
		});

		// event listeners set:
		// href to the work detail view page
		table.on("rowClick", function (e, row) {
			var data = row.getData();
			var url = withBasePath(`/hands/${data["hit_id"]}`);
			window.open(url, "_self");
		});
		table.on("dataLoaded", function (data) {
			var el = document.getElementById("counter1");
			el.innerHTML = `${data.length}`;
			var el = document.getElementById("counter2");
			el.innerHTML = `${data.length}`;
		});

		table.on("dataFiltered", function (filters, data) {
			var el = document.getElementById("counter1");
			el.innerHTML = `${data.length}`;
		});
	</script>
</PageLayout>
