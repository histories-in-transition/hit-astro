---
import PageLayout from "../layouts/page-layout.astro";
import TableHead from "../components/table-head.astro";
---

<PageLayout title="manuscripts">
	<TableHead title="Handschriften" />

	<script>
		import { TabulatorFull as Tabulator } from "tabulator-tables";
		import "tabulator-tables/dist/css/tabulator_semanticui.min.css";
		// import "tabulator-tables/dist/css/tabulator_materialize.min.css";
		import data from "../content/data/manuscripts.json";
		import msitems from "../content/data/ms_items.json";
		import {
			jsonpathLookup,
			jsonpathsLookup,
			jsonpathDistinctLookup,
		} from "../lib/tabulator-utils.js";
		import { withBasePath } from "../lib/withBasePath";
		// preprocess tabledata
		// merge two datasets manuscripts.json + msitems.json
		const tabledata = Object.values(data).map((ms) => {
			const matchingMsItems = Object.values(msitems).filter((item) =>
				item.manuscript.some((man) => man.hit_id === ms.hit_id),
			);
			// Map decorations from matching items into a single array for decoItems
			const decoItems = matchingMsItems.flatMap((item) => item.decoration || []);

			// Map decorations from matching items into a single array for decoItems
			const annotations = matchingMsItems.flatMap(
				(item) =>
					item.hands_role.filter((h_role) =>
						h_role.role.some((role) => role.value != "Schreiber"),
					) || [],
			);

			return {
				...ms,
				decoItems,
				annotations,
			};
		});

		var table = new Tabulator("#tabulator-table", {
			headerFilterLiveFilterDelay: 600,
			height: 900,
			data: tabledata,
			layout: "fitColumns",
			responsiveLayout: "collapse",
			columns: [
				{
					title: "Signatur",
					field: "view_label",
					formatter: "textarea",
					headerFilter: "input",
				},
				{
					title: "Aktueller Standort",
					field: "library_full",
					mutator: jsonpathsLookup,
					mutatorParams: {
						paths: ["$[*].settlement[*].name", "$[*].library_full"],
						separator: ": ",
					},
					headerFilter: "input",
				},
				{
					title: "Entstehungsort",
					field: "orig_place",
					mutator: jsonpathLookup,
					mutatorParams: { path: "$[*].name" },
					headerFilter: "input",
				},
				{
					title: "Entstehungsdatum",
					field: "manuscripts_dated",
					mutator: jsonpathLookup,
					mutatorParams: {
						path: "$[*].date[*].label",
						separator: "; ",
					},
					headerFilter: "input",
				},
				{
					title: "Dekoration",
					field: "decoItems",
					mutator: jsonpathDistinctLookup,
					mutatorParams: { path: "$[*].value", separator: " | " },
					headerFilter: "input",
				},
				{
					title: "Annotationen",
					field: "annotations",
					mutator: jsonpathDistinctLookup,
					mutatorParams: { path: "$[*].role[*].value", separator: " | " },
					headerFilter: "input",
				},
			],
		});

		//trigger download of data.csv file
		document.getElementById("download-csv")!.addEventListener("click", function () {
			table.download("csv", "data.csv");
		});

		//trigger download of data.json file
		document.getElementById("download-json")!.addEventListener("click", function () {
			table.download("json", "data.json");
		});

		//trigger download of data.html file
		document.getElementById("download-html")!.addEventListener("click", function () {
			table.download("html", "data.html", { style: true });
		});

		// event listeners set:
		// href to the ms detail view page
		table.on("rowClick", function (e, row) {
			var data = row.getData();
			var url = withBasePath(`/manuscripts/${data["hit_id"]}`);
			window.open(url, "_self");
		});
		table.on("dataLoaded", function (data) {
			var el = document.getElementById("counter1");
			el.innerHTML = `${data.length}`;
			var el = document.getElementById("counter2");
			el.innerHTML = `${data.length}`;
		});

		table.on("dataFiltered", function (filters, data) {
			var el = document.getElementById("counter1");
			el.innerHTML = `${data.length}`;
		});
	</script>
</PageLayout>
