---
import {Icon} from "astro-icon/components";
import PageLayout from "../../layouts/page-layout.astro";
import Button from "../../components/button.astro"
import manuscripts from "../../content/data/manuscripts.json";
import msItems from "../../content/data/ms_items.json";
import NavLink from "../../components/nav-link.astro";

export async function getStaticPaths() {
    const items = Object.values(msItems);
    
    const paths = Object.values(manuscripts).map((manuscript) => {
      const id = manuscript.hit_id
      const matchingMsItems = items.filter((item) => {
      return item.manuscript.some((ms) => ms.hit_id === id);
    });
      return {
        params: {id: manuscript.hit_id},
        props: {data: manuscript, msItem: matchingMsItems}
      }
    });

    return paths; 
}

const { data: manuscript, msItem: matchingMsItems } = Astro.props;

---

<PageLayout title={manuscript?.shelfmark[0]?.value}>
    <div>
        <article class="w-full md:w-3/4 grid grid-cols-1 mx-auto p-5 my-10 gap-y-2">
            <h1 class="text-3xl font-semibold py-3 text-brandRed">{manuscript?.shelfmark[0]?.value}</h1>
            <div class="flex gap-2 justify-end">
              <Button>TEI-XML</Button>
              <Button>PDF</Button>
            </div>
            <dl class="border-2 rounded-sm border-brandBrown bg-brandRose grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base p-5">

              <dt class="font-semibold border-r border-gray-300 pr-2">Ort:</dt>
              <dd class="pl-5">{manuscript?.library_full[0]?.settlement[0]?.name}</dd>
              
              
              <dt class="font-semibold border-r border-gray-300 pr-2">Bibliothek:</dt>
              <dd class="pl-5"><NavLink href={manuscript?.library_full[0]?.gnd_url} target="_blank" class="hover:text-brandRed">{manuscript.library_full[0]?.library_full} <Icon class="inline-flex align-baseline" aria-hidden="true" name="lucide:external-link"></Icon></NavLink></dd>
              
              
              <dt class="font-semibold border-r border-gray-300 pr-2">Signatur:</dt>
              <dd class="pl-5">{manuscript?.idno}</dd>

              {manuscript.idno_former &&
              <dt class="font-semibold border-r border-gray-300 pr-2">Olim:</dt>
              <dd class="pl-5">{manuscript?.idno_former}</dd>}
            </dl>

            <!-- <h2 class="font-semibold px-5">Das Äuseres</h2> -->
            <dl class="border-2 rounded-sm border-brandBrown bg-brandRose grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base p-5">
                <dt class="font-semibold border-r border-gray-300 pr-2">Material:</dt>
                <dd class="pl-5">
                    {manuscript?.material?.value.includes("parchment") && <span>Pergament</span>}
                    {manuscript?.material?.value.includes("mixed") && <span>Mischung</span>}
                    {manuscript?.material?.value.includes("paper") && <span>Papier</span>}
                     {manuscript?.material_spec}</dd>
                     
                <dt class="font-semibold border-r border-gray-300 pr-2">Umfang:</dt>
                <dd class="pl-5">{manuscript?.extent} Bll.</dd> 

                <dt class="font-semibold border-r border-gray-300 pr-2">Maße:</dt>
              <dd class="pl-5">{manuscript?.height} × {manuscript?.width} mm</dd> 

              <dt class="font-semibold border-r border-gray-300 pr-2">Foliierung:</dt>
              <dd class="pl-5">{manuscript?.foliation ?? 'N/A'}</dd>

              {manuscript.quiremarks && (
                <dt class="font-semibold border-r border-gray-300 pr-2">Kustoden:</dt>
                <dd class="pl-5">{manuscript?.quiremarks}</dd>
           )} 
                {manuscript.catchwords && (
                     <dt class="font-semibold border-r border-gray-300 pr-2">Reklamanten:</dt>
                     <dd class="pl-5">{manuscript?.catchwords}</dd>
                )}
                <dt class="font-semibold border-r border-gray-300 pr-2">Lagenstruktur:</dt>
                <dd class="pl-5">
                  {manuscript.quire_structure && (
                     <span set:html={manuscript?.quire_structure}></span>
                  )}
                </dd>

                
                <dt class="font-semibold border-r border-gray-300 pr-2">Einband:</dt>
                <dd class="pl-5">
                  {manuscript?.binding_date.map(date => (
                    <span>{date?.value}</span>
                  ))}
                  {manuscript?.binding}</dd>
                
                  {manuscript?.acc_mat && (
                     <dt class="font-semibold border-r border-gray-300 pr-2">Fragmente:</dt>
                      <dd class="pl-5">
                    {manuscript?.acc_mat}
                  </dd>
                  )}
                </dl>
                <!-- <h2>Geschichte:</h2> -->

            <dl class="border-2 rounded-sm border-brandBrown bg-brandRose grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base p-5">
              <dt class="font-semibold border-r border-gray-300 pr-2">Herkunft:</dt>
              <dd class="pl-5">{manuscript?.history}</dd> 

              <dt class="font-semibold border-r border-gray-300 pr-2">Herkunfsort:</dt>
              <dd class="pl-5">{manuscript?.orig_place.map(place => {
                return place.name}).join(', ')</dd> 

              <dt class="font-semibold border-r border-gray-300 pr-2">Provenienz:</dt>
              <dd class="pl-5">
                {
                    manuscript?.provenance.map((entry, index) => (
                      <>
                        <NavLink href="/" class="hover:text-brandRed">
                          {entry.label}
                        </NavLink>
                       
                        {index < manuscript.provenance.length - 1 && ', '}
                      </>
                    ))
                  }</dd> 
            <dt class="font-semibold border-r border-gray-300 pr-2">Datierung:</dt>
            <dd class="pl-5">
                {manuscript?.manuscripts_dated.length > 0 &&
                <ul>
                  {manuscript.manuscripts_dated.map((date) => (
                    <li>{date.date[0].label} nach {date.authority[0].name} ({date.authority[0].short_title})</li>
                  ))}
                  </ul>}
            </dd>

              <dt class="font-semibold border-r border-gray-300 pr-2">Bibliographie:</dt>
              <dd class="pl-5">{manuscript?.bibliography}</dd> 
            </dl>
            <dl class="border-2 rounded-sm border-brandBrown bg-brandRose grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base p-5">
                <dt class="font-semibold border-r border-gray-300 pr-2">Externe Links:</dt>
                <dd class="pl-5">
                    <div class="flex flex-col">
                        {manuscript.digi_url && (
                             <div class="flex">
                                <NavLink href={manuscript.digi_url} class="inline-flex hover:text-brandRed">
                                    <section>Digitalisat</section> 
                                    
                                </NavLink>
                            </div>
                           
                          )}
                          
                        {manuscript.catalog_url && (
                           <div class="flex">                        
                                <NavLink href={manuscript.catalog_url} class="inline-flex hover:text-brandRed">
                                    <section>Katalogisat</section> 
                                    
                                </NavLink>
                            </div>                    
                        )}
        
                        {manuscript.manuscripta_url && (
                             <div class="flex">
                                <NavLink href={manuscript.manuscripta_url} class="inline-flex hover:text-brandRed">
                                    <section>Manuscripta.at</section> 
                                    
                                </NavLink>
                            </div>
                           
                          )}
        
                          {manuscript.handschriftenportal_url && (
                             <div class="flex">
                                <NavLink href={manuscript.handschriftenportal_url} class="inline-flex hover:text-brandRed">
                                    <section>Handschriftenportal</section> 
                                    
                                </NavLink>
                            </div>
                           
                          )}
                        </div>    
                </dd>
            </dl>

            
            <dl class="border-2 rounded-sm border-brandBrown bg-brandRose grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base p-5">
              <dt class="font-semibold border-r border-gray-300 pr-2">Inhalt:</dt>
              <dd class="pl-5">{manuscript?.content_summary}</dd>
              {matchingMsItems
                .sort((a, b) => {
                  // To sort nested msItems - show the 'mother' msItem first, then the children - extract the first and second numbers from the "locus_grp" strings 
                  const extractNumbers = (locusGrp : string) => {
                    const match = locusGrp.match(/^(\d+)[^\d]*(\d*)/);
                    if (!match) {
                      // Return a default value if match is null (invalid format)
                      return [0, 0]; // or handle as needed, e.g., return [-1, -1] to push these to the end
                    }
                    const startNumber = parseInt(match[1], 10);  // The first number, use parseInt with radix 10
                    const endNumber = match[2] ? parseInt(match[2], 10) : startNumber;  // The second number if present, otherwise use the startNumber
                    return [startNumber, endNumber];
                  };

                  const [startA, endA] = extractNumbers(a.locus_grp);
                  const [startB, endB] = extractNumbers(b.locus_grp);

                  // Compare first by the starting numbers
                  if (startA !== startB) return startA - startB;

                  // If starting numbers are the same, compare by the ending numbers (show larger first)
                  return endB - endA;
                })
                .map(item => {
                return <dt class="border-r border-gray-300 pr-2 justify-self-end">{item.locus_grp}</dt>
                <dd class="pl-5">
                {item.title_work[0]?.title && <span class="font-semibold underline underline-offset-4 hover:text-brandRed"><NavLink href=`/works/${item.title_work[0].hit_id}`>{item.title_work[0].title}</NavLink></span>}
                {item.title_note && <span>({item.title_note})</span>}
                {item.rubric && <span class="italic">›{item.rubric}‹</span>}
                {item.incipit && <span class="italic">{item.incipit} ... </span>}                
                {item.explicit && <span class="italic">{item.explicit}</span>}
                {item.final_rubric && <span class="italic">›{item.final_rubric}‹</span>}
                {item.decoration && <span>{item.decoration}</span>}
                {item.bibl && <span>{item.bibl}</span>}

                </dd>
                ;
              })}
          </dl>   
    </article>
    </div>
</PageLayout>