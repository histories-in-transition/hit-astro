---
import PageLayout from "../../layouts/page-layout.astro";
import Button from "../../components/button.astro"
import { Icon } from "astro-icon/components";
import msitems from "../../content/data/ms_items.json";
const msItems = Object.values(msitems);
import NavLink from "../../components/nav-link.astro";
import works from "../../content/data/works.json";

export async function getStaticPaths() {  
  const paths = Object.values(msitems).map((item) => ({
    params: { id: item.hit_id.toString() }, 
    props: { data: item }
  }));

  return paths;
}
       
const { data: item } = Astro.props;
---

<PageLayout title={item.manuscript[0]?.shelfmark[0].value}>
    <div>
        <article class="w-full md:w-3/4 grid grid-cols-1 mx-auto p-5 my-10 gap-y-2">
          <div class="flex items-center gap-3 text-brandRed">
            <NavLink href=`/msitems/${item.prev.id}` class="flex items-center">
              <Icon
                aria-hidden="true"
                name="lucide:circle-chevron-left"
                class="text-3xl" 
              />
            </NavLink>
            <h1 class="text-3xl font-semibold py-3 text-brandRed">
              <NavLink href=`/manuscripts/${item.manuscript[0]?.hit_id}` class="underline underline-offset-2">{item.manuscript[0]?.shelfmark[0].value}</NavLink>
              <span> ({item?.locus_grp}) </span>
            </h1>
            <NavLink href=`/msitems/${item.next.id}` class="flex items-center">
              <Icon
                aria-hidden="true"
                name="lucide:circle-chevron-right"
                class="text-3xl"
              />
            </NavLink>
          </div>
        
        
        <div class="flex gap-2 justify-end">
          <Button>TEI-XML</Button>
          <Button>PDF</Button>
        </div>
        <dl class="border-2 rounded-sm border-brandBrown bg-brandRose grid grid-cols-[1fr_6fr] text-sm md:leading-7 md:text-base p-5">

            <dt class="font-semibold border-r border-gray-300 pr-2">Titel:</dt>
            <dd class="pl-5">{item.title_work?.map(title => <NavLink href=`/works/${title?.hit_id}` class="hover:text-brandRed">{title.title}</NavLink>)}</dd>
            {item.title_note && 
            <dt class="font-semibold border-r border-gray-300 pr-2">Bemerkung:</dt>
            <dd class="pl-5">{item?.title_note}</dd>
            }
            <dt class="font-semibold border-r border-gray-300 pr-2">Incipit:</dt>
            <dd class="pl-5 italic">{item?.incipit}</dd>
            <dt class="font-semibold border-r border-gray-300 pr-2">Explicit:</dt>
            <dd class="pl-5 italic">{item?.explicit}</dd>
            <dt class="font-semibold border-r border-gray-300 pr-2">Dekoration:</dt>
            <dd class="pl-5">{item?.decoration.map(deco => deco.value)}</dd>
            <dt class="font-semibold border-r border-gray-300 pr-2">HÃ¤nde:</dt>
            <dd class="pl-5">{item?.hand.map(hand => hand.value).join(' | ')}</dd>
            
            
           
          </dl>
        </article>
    </div>
</PageLayout>